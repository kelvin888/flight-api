{
  "openapi": "3.0.0",
  "info": {
    "title": "Flights server documentation",
    "version": "1.0.0"
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number"
          },
          "type": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "UserResponse": {
        "properties": {
          "id": {
            "type": "string",
            "example": "61eb3961-8a49-4e7a-90e2-f7eeaf1f7204"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john@doe.com"
          }
        }
      },
      "AuthenticatedResponse": {
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      },
      "Flight": {
        "properties": {
          "id": {
            "type": "string",
            "example": "61eb3961-8a49-4e7a-90e2-f7eeaf1f7204"
          },
          "code": {
            "type": "string",
            "example": "AbcDef"
          },
          "capacity": {
            "type": "number",
            "example": 200
          },
          "departureDate": {
            "type": "string",
            "example": "2020-10-23"
          },
          "status": {
            "type": "string",
            "enum": [
              "none",
              "processing",
              "ready"
            ],
            "example": "processing"
          },
          "img": {
            "type": "string"
          }
        }
      },
      "FlightData": {
        "properties": {
          "code": {
            "type": "string",
            "example": "AbcDef"
          },
          "capacity": {
            "type": "number",
            "example": 50,
            "minimum": 1,
            "maximum": 200
          },
          "departureDate": {
            "type": "string",
            "example": "2020-10-23"
          }
        }
      },
      "MultipartFlightData": {
        "properties": {
          "code": {
            "type": "string"
          },
          "capacity": {
            "type": "string"
          },
          "departureDate": {
            "type": "string"
          },
          "photo": {
            "type": "string",
            "format": "binary"
          }
        }
      },
      "FlightStatusResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string"
            },
            "status": {
              "type": "string",
              "enum": [
                "none",
                "processing",
                "ready"
              ]
            },
            "img": {
              "type": "string"
            }
          }
        }
      },
      "FlightResponse": {
        "type": "object",
        "properties": {
          "total": {
            "type": "number",
            "description": "The total number of flights in the database"
          },
          "count": {
            "type": "number",
            "description": "The total number of flights that matched your filter"
          },
          "resources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Flight"
            }
          }
        }
      },
      "AvailableResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "available",
              "unavailable"
            ],
            "example": "available"
          }
        }
      },
      "RefreshTokenResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Authentication required",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Request contains errors and cannot be processed",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "description": "Login a user with credentials",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john@doe.com"
                  },
                  "password": {
                    "type": "string",
                    "minimum": 1,
                    "maximum": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a user object with tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Refresh a token",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns a new token and a refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "description": "Register a user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minimum": 3,
                    "maximum": 255,
                    "example": "john"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@doe.com"
                  },
                  "password": {
                    "type": "string",
                    "minimum": 1,
                    "maximum": 255
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns a user object with tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthenticatedResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/auth/me": {
      "get": {
        "description": "Gets the current logged user",
        "responses": {
          "200": {
            "description": "Returns a user object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/flights": {
      "get": {
        "description": "Returns all flights in a paginated format",
        "parameters": [
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "number",
              "default": 1,
              "minimum": 1,
              "example": 1
            },
            "description": "The desired page to get from the whole collection of flights"
          },
          {
            "in": "query",
            "name": "size",
            "schema": {
              "type": "number",
              "default": 10,
              "minimum": 1,
              "example": 10
            },
            "description": "The number of flights to return in one page"
          },
          {
            "in": "query",
            "name": "code",
            "schema": {
              "type": "string",
              "default": ""
            },
            "description": "The full code of the flight to search for or a partial match",
            "examples": {
              "partial": {
                "value": "abc",
                "summary": "Partial code search with less than 6 characters that can return multiple values"
              },
              "complete": {
                "value": "AbcDef",
                "summary": "A full code that can return at most one result"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns total flights, filtered results, and a collection of flight objects",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "post": {
        "description": "Creates one flight without photo",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created flight",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flight"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/flights/available": {
      "get": {
        "description": "Returns if a code is available or not",
        "parameters": [
          {
            "in": "query",
            "name": "code",
            "required": true,
            "schema": {
              "type": "string",
              "example": "AbcDef"
            },
            "description": "The exact 6 characters code to verify"
          }
        ],
        "responses": {
          "200": {
            "description": "Returns available or unavailable status for the requested code",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AvailableResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/flights/withPhoto": {
      "post": {
        "description": "Creates one flight with photo",
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MultipartFlightData"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Returns the newly created flight",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flight"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/flights/{id}": {
      "delete": {
        "description": "Delete a flight using id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Returns a successful response with empty body if the flight was deleted"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "put": {
        "description": "Updates one flight without photo",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FlightData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the newly created flight",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flight"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/flights/{id}/photo": {
      "get": {
        "description": "Download the photo of a flight",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the raw image if one is stored in the flight",
            "content": {
              "image/*": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/flights/{id}/details": {
      "get": {
        "description": "Returns one flight by id",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the flight object",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flight"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/flights/status": {
      "get": {
        "description": "Returns the status of flights based on id",
        "parameters": [
          {
            "in": "query",
            "name": "ids",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the file processing status of each of the requested ids",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FlightStatusResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/flights/{id}/withPhoto": {
      "put": {
        "description": "Updates one flight without photo",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MultipartFlightData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns the newly created flight",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Flight"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "tags": []
}